version: '3.8'

networks:
  outside-nw:

services:
  database:
    image: 'mysql:8.0.21'
    environment:
      MYSQL_ROOT_PASSWORD: r00t
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: testdb
      MYSQL_USER: testdbuser
      MYSQL_PASSWORD: dummyPass!
    ports:
      - '3306:3306'
    volumes:
      - ~/data/mysql8:/var/lib/mysql
    networks:
      - outside-nw
#    healthcheck:
#      test: mysql --user $$MYSQL_USER --password=$$MYSQL_PASSWORD --database $$MYSQL_DATABASE --execute "select 1;"
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 15s

  application:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.app-exploded
    ports:
      - 8080
      - 5701
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:mysql://database:3306/testdb'
      SPRING_DATASOURCE_USERNAME: testdbuser
      SPRING_DATASOURCE_PASSWORD: dummyPass!
      SPRING_FLYWAY_URL: 'jdbc:mysql://database:3306/testdb'
      SPRING_FLYWAY_USER: testdbuser
      SPRING_FLYWAY_PASSWORD: dummyPass!
    networks:
      - outside-nw
    depends_on:
      - database
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.application.rule=Host(`dev-sandbox`)
      - traefik.http.services.application.loadbalancer.server.port=8080


  load-balancer:
    image: 'traefik:v2.3'
    command: >
      --providers.docker=true
      --providers.docker.exposedbydefault=false
      --entryPoints.http.address=":80"
      --accesslog
      --log.level=INFO
      --api=true
      --api.insecure=true
      --api.dashboard=true
    ports:
      - "80:80"  # load balancer port
      - "8080:8080"  # management UI
    volumes:
      # traefik does its magic by reading information about running containers from the docker socket
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - outside-nw
    depends_on:
      - application
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik_http.rule=Host(`dev-sandbox`)
      - traefik.http.routers.traefik_http.service=api@internal
      - traefik.http.routers.traefik_http.entrypoints=http